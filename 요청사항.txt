다음은 지금까지 요청하셔서 반영한 작업 정리입니다.

- UI 구조
  - `customtkinter` 기반 전체화면 앱, 탭 구성: 데이터 생성, 화자 선택, 이미지 설정
  - 데이터 섹션 3행: ‘AI 데이터 생성’, ‘AI 데이터 읽기’, ‘설정…’ 버튼 배치
  - 모든 라벨-입력/드롭다운 밀착 배치, 한글 라벨, 밝은/어두운 테마 반영
  - 단일 인스턴스 실행 보장(PID 파일)

- AI 서비스/설정
  - ‘설정…’ 대화창: Gemini API Key/모델/로케일 입력, `.env` 자동 저장/로드
  - `AI Prompt.txt`(우선) → 템플릿 즉시 사용, {{변수}}·[원어]/[학습어]/[등급]/[주제] 등 치환

- 데이터 생성/호출/저장
  - ‘AI 데이터 생성’:
    - 치환된 프롬프트 `..._prompt.txt`/`..._prompt.json` 저장
    - Gemini 호출 → 원문 `..._ai_raw.txt`, 파싱 성공 시 `..._ai.json` 저장
    - 응답 키 정규화(영문 키 → 한국어 표준 키)
    - 표준 키별 스크립트 자동 분리 저장(.txt)
  - ‘AI 데이터 읽기’: 기존 `..._ai.json` 불러 동일한 후처리·분리 저장
  - 메시지 창에 모든 저장/오류 로그 출력

- 스크립트 파일 포맷/매핑(.txt)
  - 회화 스크립트 → `conversation.txt`
  - 타이틀 스크립트 → `title.txt`(리스트 결합)
  - 썸네일 스크립트 → `thumbnail.txt`(text + imageConcept 결합)
  - 인트로 스크립트 → `intro.txt`
  - 엔딩 스크립트 → `ending.txt`
  - 키워드 스크립트 → `keywords.txt`(쉼표 결합)
  - 배경 스크립트 → `background.txt`
  - 대화 스크립트 → `dialogue.txt`
  - 저장 위치: `output/<프로젝트명>/<식별자>/`

- 파싱/후처리
  - `fullVideoScript.dialogueCsv` 사용 시:
    - 한글 비율로 원어/학습어 열 뒤바뀜 자동 감지·교정
    - 헤더를 “순번,원어,학습어,읽기”로 정규화
    - 교정 결과를 ‘회화 스크립트’로도 반영

- 표시 로직(스크립트 탭)
  - 드롭다운 선택 → 대응 `.txt` 우선 로드, 없으면 메모리/자동 로드(ai.json→분리 저장)
  - ‘회화 스크립트’ 선택 시 CSV를 표(그리드)로 렌더링, 나머지는 텍스트 창 표시

- 프리뷰 기능(메시지 창)
  - 로그 라인 더블클릭 → 해당 라인의 경로를 인식해 파일 프리뷰 팝업 표시
  - 경로 없음/파일 없음 시 안내 로그
  - Space 키 프리뷰 바인딩은 제거(요청 반영)

필요 시, 중국어 pinyin → 한글 발음(‘읽기’ 열 자동 변환) 후처리도 추가해 드릴 수 있습니다.

=======

- AI 서비스 설정
  - Gemini: API Key, 모델명(예: gemini-2.5-flash), 로케일

- .env 파일을 사용하도록 수정하고 .env 파일에 어떻게 넣어야하지?

- 실행

- AI 프롬프트가 변하면 다음 실행시 바로 반영되나? 아니면 변경된 내용을 반영해줘

- 실행해줘

- md 파일이 어디에 만들어졌지? 안보이네

- 확인해줘

- 아니 자동으로 저장하게해

- 실행

- @kor-chn_prompt.txt 에 설정값이 만영이 안되어 엉뚱한 내용을 가져왔네. 수정해줘

- 실행

- @fullVideoScript.txt 원어와 학습어가 바뀌었네 확인해줘
  - Nǐ hǎo! Nǐ zěnmeyàng? -> 니하오! 점머양? 이 되야하는데 잘못됐네

- 메시지창에서 저장된 메시지를 선택하고 fn + 스페이스를 누르면 해당 파일을 프리뷰로 볼 수 있게 수정해줘

- 해당 라인을 더블클릭하면 프리뷰하게 해줘

- Space 키와 동일하게 동작하며, 경로가 없거나 파일이 없으면 메시지 창에 안내 로그가 출력됩니다. 삭제

- 실행

- 스크립트 선택과 txt 파일 매칭을 보여줘

- 파일 이름과 스크립트 선택에서 불러오는 파일과 매칭이 안됨

- 회화 스크립트는 그리드 형태로 표시해줘

- 실행

- 지금까지 내가 요청한 작업을 모두 정리해줘

- 내가 요청한 내용을 정리하지 말고 그대로 취합해줘

- 데이터 섹션 3행: ‘AI 데이터 생성’, ‘AI 데이터 읽기’, ‘설정…’ 버튼 배치하고 기능을 구햔해줘

- 버튼이 안보이는데 확인해줘